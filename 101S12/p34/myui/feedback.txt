Student: myui
Assignment: p34
Date: 2012-05-09 10:59:24.537743
Grade: 4.5

char* word; creates a pointer, but does not point at any malloc'd memory. Scanf
does not perform the memory allocation for you, so you end up storing the string
 into unallocated memory that word happens to point at.
This could have been solved by changing word to a fixed-length array of characte
rs:
char word[20]

Your logic in is_palindrome could be simplified and still do the same thing.

But it all works!

========== p34.c ==========
/**********************************************/
/* Programmer: Ming Yui Chung Jacky           */
/*                                            */
/* Program : Palindrome Detector              */
/*                                            */
/* Approximate completion time: 15 minutes    */
/**********************************************/

#include<stdio.h>
#include<string.h>

int is_palindrome( char* the_string, int start_char, int end_char );

int main( int argc, char *argv[] ) {
  
  char* word;
  int check, length;

  printf( "Enter a string: " );
  scanf( "%s", word );

  length = strlen( word );

  check = is_palindrome( word, 0, length ); 

  if ( check == 1 )
    printf( "Yes, it is a palindrome.\n" );
  else
    printf( "No, it is not a palindrome.\n" );

  return 0;
}

int is_palindrome( char* the_string, int start_char, int end_char ) {
  if( start_char < end_char ){
    if( the_string[start_char] == the_string[end_char - 1] )
      return is_palindrome( the_string, start_char + 1, end_char - 1 );
    else 
      return 0;
  }
  else if( start_char == end_char )
    return 1;
  else
    return 0;
}
    

